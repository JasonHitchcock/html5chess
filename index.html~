<html>
  <head>
    <title>Play Chess</title>
    <style type="text/css">
	#pieces {
	    display:none
	}
    </style>
    <script type="text/javascript">
    //{
	var enpassant = new Object;
	var kingmoved = new Object;
	var computerplayer = false;
	kingmoved["white"] = false;
	kingmoved["black"] = false;
	var white = true;
	var pieces = new Array;
	var squares = new Object;
	var a = 0;
	for (a=0;a<8;a++) {
	    pieces[a] = new Array;
	    var b = 0;
	    for (b=0;b<8;b++) {
		pieces[a][b] = new Object;
		if (a < 2) {
		    pieces[a][b].color = "black";
		    if (a == 1) {
			pieces[a][b].piece = "pawn";
		    } else if (b < 1 || b > 6) {
			pieces[a][b].piece = "rook";
		    } else if (b < 2 || b > 5) {
			pieces[a][b].piece = "knight";
		    } else if (b < 3 || b > 4) {
			pieces[a][b].piece = "bishop";
		    } else if (b == 3) {
			pieces[a][b].piece = "queen";
		    } else {
			pieces[a][b].piece = "king";
		    }
		} else if (a > 5) {
		    pieces[a][b].color = "white";
		    if (a == 6) {
			pieces[a][b].piece = "pawn";
		    } else if (b < 1 || b > 6) {
			pieces[a][b].piece = "rook";
		    } else if (b < 2 || b > 5) {
			pieces[a][b].piece = "knight";
		    } else if (b < 3 || b > 4) {
			pieces[a][b].piece = "bishop";
		    } else if (b == 3) {
			pieces[a][b].piece = "queen";
		    } else {
			pieces[a][b].piece = "king";
		    }
		} else {
		    pieces[a][b].color = null;
		    pieces[a][b].piece = null;
		}
	    }
	}
	squares.one = [-1, -1];
	squares.two = [-1, -1];
	function makeMove() {
	    var oldpiece = new Object;
	    oldpiece.color = pieces[squares.two[1]][squares.two[0]].color;
	    oldpiece.piece = pieces[squares.two[1]][squares.two[0]].piece;
	    pieces[squares.two[1]][squares.two[0]].color = pieces[squares.one[1]][squares.one[0]].color;
	    pieces[squares.two[1]][squares.two[0]].piece = pieces[squares.one[1]][squares.one[0]].piece;
	    pieces[squares.one[1]][squares.one[0]].color = null;
	    pieces[squares.one[1]][squares.one[0]].piece = null;
	    var blackkingcoord = new Array;
	    var whitekingcoord = new Array;
	    var i, j;
	    for (i=0;i<8;i++)
		for (j=0;j<8;j++)
		    if (pieces[i][j].piece == "king")
			if (pieces[i][j].color == "white") {
			    whitekingcoord[0] = i;
			    whitekingcoord[1] = j;
			} else if (pieces[i][j].color == "black") {
			    blackkingcoord[0] = i;
			    blackkingcoord[1] = j;
			}
	    var blackcheck = false;
	    var whitecheck = false;
	    if (checkCheck(blackkingcoord[0], blackkingcoord[1], "white")) {
		blackcheck = true;
	    }
	    if (checkCheck(whitekingcoord[0], whitekingcoord[1], "black")) {
		whitecheck = true;
	    }
	    if ((white && whitecheck) || (!(white) && blackcheck)) {
		alert("You can't do that, that's check");
		pieces[squares.one[1]][squares.one[0]].color = pieces[squares.two[1]][squares.two[0]].color;
		pieces[squares.one[1]][squares.one[0]].piece = pieces[squares.two[1]][squares.two[0]].piece;
		pieces[squares.two[1]][squares.two[0]].piece = oldpiece.piece;
		pieces[squares.two[1]][squares.two[0]].color = oldpiece.color;
		return;
	    }
	    if (pieces[squares.two[1]][squares.two[0]].piece == "king") {
		if (!(kingmoved[pieces[squares.two[1]][squares.two[0]].color])) {
		    kingmoved[pieces[squares.two[1]][squares.two[0]].color] = true;
		    if (Math.abs(squares.two[0]-squares.one[0]) == 2) {
			if (squares.two[0] - squares.one[0] == -2) {
			    squares.one = [squares.two[0]-2, squares.one[1]];
			    squares.two = [squares.two[0]+1, squares.two[1]];
			} else if (squares.one[0] - squares.two[0] == -2) {
			    squares.one = [squares.two[0]+1, squares.one[1]];
			    squares.two = [squares.two[0]-1, squares.one[1]];
			}
			makeMove();
			white = !(white);
		    }
		}
		
	    }
	    if (pieces[squares.two[1]][squares.two[0]].piece == "pawn") {
		if (white) {
		    if (squares.two[1] == 0)
			promote(squares.two[1], squares.two[0]);
		    if (squares.one[0] in enpassant && squares.two[0] == enpassant[squares.one[0]]) {
			    pieces[squares.two[1]+1][squares.two[0]].piece = null;
			    pieces[squares.two[1]+1][squares.two[0]].color = null;
		    }
		} else {
		    if (squares.two[1] == 8)
			promote(squares.two[1], squares.two[0]);
		    if (squares.one[0] in enpassant && enpassant[squares.one[0]] == squares.two[0]) {
			pieces[squares.two[1]-1][squares.two[0]].piece = null;
			pieces[squares.two[1]-1][squares.two[0]].color = null;
		    }
		}
		
		enpassant = new Object;
		if (Math.abs(squares.two[1] - squares.two[0]) == 2) {
		    if (0 < squares.two[0])
			if (pieces[squares.two[1]][squares.two[0]-1].piece == "pawn")
			    enpassant[squares.two[0]-1] = squares.two[0];
		    if (squares.two[0] < 7)
			if (pieces[squares.two[1]][squares.two[0]+1].piece == "pawn")
			    enpassant[squares.two[0]+1] = squares.two[0];
		}
	    }
	    if (whitecheck && !(white))
		alert("White is in check");
	    if (white && blackcheck)
		alert("Black is in check");
	    white = !(white);
	}

	function promote(x, y) {
	    var promoted = false;
	    while (!promoted) {
		queen = confirm("Do you want to promote to a queen?");
		if (queen) {
		    pieces[x][y].piece = "queen";
		    break;
		}
		knight = confirm("Do you want to promote to a knight?");
		if (knight) {
		    pieces[x][y].piece = "knight";
		    break;
		}
		rook = confirm("Do you want to promote to a rook?");
		if (rook) {
		    pieces[x][y].piece = "rook";
		    break;
		}
		bishop = confirm("Do you want to promote to a bishop?");
		if (bishop) {
		    pieces[x][y].piece = "rook";
		    break;
		}
		alert("You have to promote your pawn");
	    }
	}

	function validMove(x,y) {
	    if (squares.one[0] != -1) {
		if ((pieces[squares.one[1]][squares.one[0]].color == "white" && white) || (pieces[squares.one[1]][squares.one[0]].color == "black" && !(white))) {
		    if ((pieces[x][y].color !=  "white" && white) || (pieces[x][y].color != "black" && !(white))) {
			switch (pieces[squares.one[1]][squares.one[0]].piece) {
			case "knight":
			    var n = Math.abs(x-squares.one[1]);
			    var o = Math.abs(y-squares.one[0]);
			    if (n+o == 3 && o != 0 && n != 0) {
				return true;
			    }
			    break;
			case "queen":
			case "rook":
			    if (squares.one[1] == x || squares.one[0] == y) {
				if (squares.one[1] != x && squares.one[0] == y) {
				    if (squares.one[1] < x) {
					for (x--;squares.one[1]<x;x--) {
					    if (pieces[x][y].color != null) {
						return false;
					    }
					}
				    } else if (squares.one[1] > x) {
					for (x++;squares.one[1]>x;x++) {
					    if (pieces[x][y].color != null) {
						return false;
					    }
					}
				    }
				} else if (squares.one[0] != y && squares.one[1] == x) {
				    if (squares.one[0] < y) {
					for (y--;squares.one[0]<y;y--) {
					    if (pieces[x][y].color != null) {
						return false;
					    }
					}
				    } else if (squares.one[0] > y) {
					for (y++;squares.one[0]>y;y++) {
					    if (pieces[x][y].color != null) {
						return false;
					    }
					}
				    }
				}
				return true;
			    }
			    if (pieces[squares.one[1]][squares.one[0]].piece == "rook") {
				break;
			    }
			case "bishop":
			    if (x+y == squares.one[0]+squares.one[1] || 
				x-y == squares.one[1]-squares.one[0]) {
				if (x+y == squares.one[0]+squares.one[1]) {
				    if (x > squares.one[1]) {
					x--;
					y++;
					while (x != squares.one[1]) {
					    if (pieces[x][y].color != null) {
						return false;
					    }
					    x--;
					    y++;
					}
				    } else if (x < squares.one[1]) {
					x++;
					y--;
					while (x != squares.one[1]) {
					    if (pieces[x][y].color != null) {
						return false;
					    }
					    x++;
					    y--;
					}
				    }
				}
				if (x-y == squares.one[1]-squares.one[0]) {
				    if (x > squares.one[1]) {
					x--;
					y--;
					while (x != squares.one[1]) {
					    if (pieces[x][y].color != null) {
						return false;
					    }
					    x--;
					    y--;
					}
				    } else if (x < squares.one[1]) {
					x++;
					y++;
					while (x != squares.one[1]) {
					    if (pieces[x][y].color != null) {
						return false;
					    }
					    x++;
					    y++;
					}
				    }
				}
				return true;
			    }
			    break;
			case "king":
			    var n = Math.abs(x-squares.one[1]);
			    var o = Math.abs(y-squares.one[0]);
			    if (n < 2 && o < 2) {
				return true;
			    } else {
				if (n == 0 && o == 2 && !(kingmoved[pieces[squares.one[1]][squares.one[0]].color])) {
				    if ((pieces[x][y-1].piece == null && pieces[x][y+1].piece == "rook") || (pieces[x][y-2].piece == "rook" && pieces[x][y-1].piece == null && pieces[x][y+1].piece == null)) {
					return true;
				    }
				}
			    }
			    break;
			case "pawn":
			    if ((pieces[squares.one[1]][squares.one[0]].color == "white" && squares.one[1]-x == 1 && ((squares.one[0] == y && pieces[x][y].color == null) || (Math.abs(y-squares.one[0]) == 1 && pieces[x][y].color == "black"))) || (pieces[squares.one[1]][squares.one[0]].color == "black" && x-squares.one[1] == 1 && ((squares.one[0] == y && pieces[x][y].color == null) || (Math.abs(y-squares.one[0]) == 1 && pieces[x][y].color == "white"))))
				return true;
			    if ((pieces[squares.one[1]][squares.one[0]].color == "white" && squares.one[1]-x == 2 && squares.one[0] == y && pieces[squares.one[1]-1][squares.one[0]].color == null && squares.one[1] == 6) || (pieces[squares.one[1]][squares.one[0]].color == "black" && x-squares.one[1] == 2 && squares.one[0] == y && pieces[squares.one[1]+1][squares.one[0]].color == null && squares.one[1] == 1))
				return true;
			    if (squares.one[0] in enpassant)
				if ((white && squares.one[1] == 3 && pieces[x+1][y].piece == "pawn") || (!(white) && squares.one[1] == 4 && pieces[x-1][y].piece == "pawn"))
				    return true;
			    break;
			}
		    }
		}
	    }
	    return false;
	}

	function checkCheck(x, y, oppcolor) {
	    var retval = 0;
	    var i = x;
	    var j = y;
	    if (0 < x) {
		if (0 < y)
		    if (pieces[x-1][y-1].piece == "king")
			retval++;
		if (pieces[x-1][y].piece == "king")
		    retval++;
		if (y < 7)
		    if (pieces[x-1][y+1].piece == "king")
			retval++;
	    }
	    if (x < 7) {
		if (0 < y)
		    if (pieces[x+1][y-1].piece == "king")
			retval++;
		if (pieces[x+1][y].piece == "king")
		    retval++;
		if (y < 7)
		    if (pieces[x+1][y+1].piece == "king")
			retval++;
	    }
	    if (0 < y)
		if (pieces[x][y-1].piece == "king")
		    retval++;
	    if (y < 7)
		if (pieces[x][y+1].piece == "king")
		    retval++;
	    knightmoves = new Array;
	    knightmoves[0] = [1,2];knightmoves[1] = [-1,2];knightmoves[2] = [-1,-2];knightmoves[3] = [1,-2];
	    knightmoves[4] = [2,1];knightmoves[5] = [-2,1];knightmoves[6] = [-2,-1];knightmoves[7] = [2,-1];
	    for (spot in knightmoves)
		if (-1 < x+knightmoves[spot][0] && x+knightmoves[spot][0] < 8 && -1 < y+knightmoves[spot][1] && y+knightmoves[spot][1] < 8) {
		    if (pieces[x+knightmoves[spot][0]][y+knightmoves[spot][1]].color == oppcolor && pieces[x+knightmoves[spot][0]][y+knightmoves[spot][1]].piece == "knight") {
			retval++;
		    }
		}
	    if (oppcolor == "white") {
		if (y+1 < 8)
		    if (pieces[x+1][y+1].piece == "pawn" && pieces[x+1][y+1].color == oppcolor)
			retval++;
		if (-1 < y-1)
		    if (pieces[x+1][y-1].piece == "pawn" && pieces[x+1][y-1].color == oppcolor)
			retval++;
	    }
	    if (oppcolor == "black") {
		if (y+1 < 8)
		    if (pieces[x-1][y+1].piece == "pawn" && pieces[x-1][y+1].color == oppcolor)
			retval++;
		if (-1 < y-1)
		    if (pieces[x-1][y-1].piece == "pawn" && pieces[x-1][y-1].color == oppcolor)
			retval++;
	    }
	    i=x;
	    j=y;
	    i++;
	    j++;
	    while(-1<i && i<8 && -1<j && j<8) {
		if (pieces[i][j].color == oppcolor)
		    if (pieces[i][j].piece == "bishop" || pieces[i][j].piece == "queen")
			retval++;
		if (pieces[i][j].color != null)
		    break;
		i++;
		j++;
	    }
	    i=x;
	    j=y;
	    i++;
	    j--;
	    while(-1<i && i<8 && -1<j && j<8) {
		if (pieces[i][j].color == oppcolor)
		    if (pieces[i][j].piece == "bishop" || pieces[i][j].piece == "queen")
			retval++;
		if (pieces[i][j].color != null)
		    break;
		i++;
		j--;
	    }
	    i=x;
	    j=y;
	    i--;
	    j++;
	    while(-1<i && i<8 && -1<j && j<8) {
		if (pieces[i][j].color == oppcolor)
		    if (pieces[i][j].piece == "bishop" || pieces[i][j].piece == "queen")
			retval++;
		if (pieces[i][j].color != null)
		    break;
		i--;
		j++;
	    }
	    i=x;
	    j=y;
	    i--;
	    j--;
	    while(-1<i && i<8 && -1<j && j<8) {
		if (pieces[i][j].color == oppcolor)
		    if (pieces[i][j].piece == "bishop" || pieces[i][j].piece == "queen")
			retval++;
		if (pieces[i][j].color != null)
		    break;
		i--;
		j--;
	    }
	    j=y;
	    for (i=x+1;-1<i && i<8;i++) {
		if (pieces[i][j].color == oppcolor)
		    if (pieces[i][j].piece == "rook" || pieces[i][j].piece == "queen")
			retval++;
		if (pieces[i][j].color != null)
		    break;
	    }
	    j=x;
	    for (i=y+1;-1<i && i<8;i++) {
		if (pieces[j][i].color == oppcolor)
		    if (pieces[j][i].piece == "rook" || pieces[j][i].piece == "queen")
			retval++;
		if (pieces[j][i].color != null)
		    break;
	    }
	    j=y;
	    for (i=x-1;-1<i && i<8;i--) {
		if (pieces[i][j].color == oppcolor)
		    if (pieces[i][j].piece == "rook" || pieces[i][j].piece == "queen")
			retval++;
		if (pieces[i][j].color != null)
		    break;
	    }
	    j=x;
	    for (i=y-1;-1<i && i<8;i--) {
		if (pieces[j][i].color == oppcolor)
		    if (pieces[j][i].piece == "rook" || pieces[j][i].piece == "queen")
			retval++;
		if (pieces[j][i].color != null)
		    break;
	    }
	    return retval;
	}

	function drawPiece(context,x,y) {
	    if (pieces[x][y].color && pieces[x][y].piece) {
		context.drawImage(document.getElementById(pieces[x][y].color+pieces[x][y].piece), y*50, x*50)
	    }
	}

	function loadCanvas() {
	    var canvas = document.getElementById('canvas');
	    var context = canvas.getContext("2d");
	    context.beginPath();
	    var i = 0;
	    var j = 0;
	    for (i=0;i<400;i+=50) {
		if (i%100 == 0) {
		    context.fillStyle = "#FFCE9E";
		} else {
		    context.fillStyle = "#D18B47";
		}
		for (j=0;j<400;j+=100) {
		    context.fillRect(i,j,50,50);
		}
		if (i%100 == 0) {
		    context.fillStyle = "#D18B47";
		} else {
		    context.fillStyle = "#FFCE9E";
		}
		for (j=50;j<400;j+=100) {
		    context.fillRect(i,j,50,50);
		}
	    }
	    for (i=0;i<8;i++) {
		for (j=0;j<8;j++) {
		    drawPiece(context,i,j);
		}
	    }
	    context.closePath();
	    context.fill();
	}

	function clickMe(e) {
	    var x = e.pageX;
	    var y = e.pageY;
	    while (x%50 != 0)
		x -= 1;
	    while (y%50 != 0)
		y -= 1;
	    x /= 50
	    y /= 50
	    if (squares.one[0] == -1) {
		if ((pieces[y][x].color == "white" && white) || (pieces[y][x].color == "black" && !(white))) {
		    squares.one = [x,y];
		}
	    } else if (squares.one[0] == x && squares.one[1] == y) {
		squares.one = [-1,-1];
		squares.two = [-1,-1];
	    } else if (squares.two[0] == x && squares.two[1] == y) {
		makeMove();
		squares.one = [-1,-1];
		squares.two = [-1,-1];
	    } else {
		if (validMove(y,x)) {
		    squares.two = [x,y];
		} else {
		    squares.two = [-1,-1];
		}
	    }
	    loadCanvas();
	    if (squares.one[0] > -1)
		colorSquare(squares.one[0], squares.one[1], 1);
	    if (squares.two[0] > -1)
		colorSquare(squares.two[0], squares.two[1], 2);
	}

	function colorSquare(x,y,z) {
	    var canvas = document.getElementById("canvas");
	    var context = canvas.getContext("2d");
	    if (z == 2) {
		context.fillStyle = "#E50";
	    } else {
		context.fillStyle = "#F61";
	    }
	    context.beginPath();
	    context.fillRect(x*50, y*50, 50, 50);
	    context.closePath();
	    drawPiece(context,y,x);
	}
    </script>
  </head>
  <body onLoad="loadCanvas()">
    <canvas onClick="clickMe(event)" id="canvas" width="400" height="400">What? No HTML5? Get Outta here!</canvas>
    <div id='pieces'>
      <img id="blackking" src="/chess/blackking.svg">
      <img id="blackqueen" src="/chess/blackqueen.svg">
      <img id="blackrook" src="/chess/blackrook.svg">
      <img id="blackbishop" src="/chess/blackbishop.svg">
      <img id="blackknight" src="/chess/blackknight.svg">
      <img id="blackpawn" src="/chess/blackpawn.svg">
      <img id="whiteking" src="/chess/whiteking.svg">
      <img id="whitequeen" src="/chess/whitequeen.svg">
      <img id="whiterook" src="/chess/whiterook.svg">
      <img id="whitebishop" src="/chess/whitebishop.svg">
      <img id="whiteknight" src="/chess/whiteknight.svg">
      <img id="whitepawn" src="/chess/whitepawn.svg">
    </div>
  </body>
</html>
